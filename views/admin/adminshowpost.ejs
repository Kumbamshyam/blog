<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>FSD || Blog</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"
    integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">
  <base href="#">

  <link rel="stylesheet" href='/css/navbar/navbar.css'>
  <link rel="stylesheet" href='/css/index/index.css'>
  <link rel="stylesheet" href='/css/articles/articles.css'>


  <!-- fontawsome CDN  -->
  <script src="https://kit.fontawesome.com/a94ae81740.js" crossorigin="anonymous"></script>
</head>

<body class="headroom headroom--not-bottom headroom--pinned headroom--top" data-aos-easing="ease"
  data-aos-duration="800" data-aos-delay="0" data-new-gr-c-s-check-loaded="14.1049.0" data-gr-ext-installed="">

  <!-- navbar -->
  <%- include('../components/admininavbar.ejs'); -%>

    <!-- <% %> -->
    <div class="container-md mb-6">
      <div class=" row g-4 g-xl-5 justify-content-around cards-container">
        <% function myfun(val, i){ %>
          <div class="col-md-6 col-lg-5 cards-containers">
            <article class="card hover-arrow">
              <a href="/post/<%= val._id%>" target="_blank"><img src="/images/small-2.jpg" class="card-img-top"
                  alt="Imajge" /></a>
              <div class="card-body p-0 pe-lg-10 mt-2">
                <a href="/post/<%= val._id%>" target="_blank" class="card-title">
                  <h1>
                    <%= val.title %>
                  </h1>
                </a>
                <time datetime="2020-12-18 20:00" class="text-dark eyebrow text-muted"> created on <%=
                    val.createdAt.toDateString() %>
                </time>
                <!-- <button type="button" class="btn btn-danger">Danger</button> -->
              </div>
            </article>
          </div>
          <% }; %>
            <% posts.map(myfun)%>

              <!-- <div class="col-md-6 col-lg-7">
              <article class="card hover-arrow">
                <a href="article.html"><img src="/images/small-1.jpg" class="card-img-top" alt="Imajge" /></a>
                <div class="card-body p-0 pe-lg-10 mt-2">
                  <a href="#" class="card-title">
                    <h1>How To Optimize Progressive Web Apps: Going Beyond The Basics</h1>
                  </a>
                  <time datetime="2020-12-18 20:00" class="eyebrow text-muted">20:00, 18 December,
                    2020</time>
                </div>
              </article>
            </div> -->

      </div>
    </div>







</body>

</html>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
  integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
  integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
<script src="js/home.js"></script>
<script>
  new FroalaEditor('#textarea', {
        // Set the image upload URL.
        imageUploadURL: '/upload_image',
        imageUploadParams: {
            id: 'my_editor',
        },
        // imageDeleteURL: '/delete_image',
        // fileUploadParam: 'file_name',
        // allowedAttrs: ['title', 'href', 'alt', 'src', 'style', 'name'],
        autosave: true,
        imageStyles: {
            class1: 'Class 1',
            class2: 'Class 2'
        },
        // imageEditButtons: ['imageReplace', 'imageAlign', 'imageRemove', '|', 'imageLink', 'linkOpen', 'linkEdit', 'linkRemove', '-', 'imageDisplay', 'imageStyle', 'imageAlt', 'imageSize'],

        // imageManagerLoadURL: '/load_images',
        // imageManagerDeleteURL: "/delete_image",
        // imageManagerDeleteMethod: "POST",
        events: {
            // 'image.uploaded': function (response) {
            //     console.log(this);
            // },
            'image.inserted': function ($img, response) {
                let images = document.getElementsByTagName("img")
                for (i = 0; i < images.length; i++) {
                    images[i].setAttribute("loading", "lazy")
                }
            },
            'image.removed': async function ($img) {
                let data = {
                    src: $img.attr("src")
                }
                console.log("im out "+ data.src);

                try {

                    console.log("im out of delete fun");
                    await fetch("/delete_image", {
                        method: 'POST',
                        body: JSON.stringify(data),
                        headers: new Headers({
                            'Content-Type': 'application/json; charset=UTF-8'
                        })
                    }).then((res) => {
                        res.json();
                    })
                        .then((myJson) => {
                            console.log(myJson);

                        })
                } catch (error) {
                    console.log(error);
                }

            },
            //         'image.removed': function (img) {
            //     $.ajax({
            //     //   Request method.
            //       method: "POST",

            //     //   Request URL.
            //       url: "/delete_image",

            //     //   Request params.
            //       data: {
            //         src: img.attr('src')
            //     }})
            //     .done (function () {
            //         console.log ('image was deleted');
            //     })
            //     .fail (function (err) {
            //       console.log ('image delete problem: ' + JSON.stringify(err));
            //     })
            //   }
            //   ,

            // 'image.removed': function($img) {
            //     var xhttp = new XMLHttpRequest();
            //     xhttp.onreadystatechange = function () {

            //         // Image was removed.
            //         if (this.readyState == 4 && this.status == 200) {
            //             console.log('image was deleted' + $img.attr('src'));
            //         }
            //     };
            //     xhttp.open("POST", "/delete_image", true);
            //     console.log('xhttp post over')
            //     let data = {
            //         src: $img.attr('src')
            //     }
            //     xhttp.send(JSON.stringify(data));
            //     console.log(JSON.stringify(data))
            // },



            // Catch video removal from the editor.
            // 'video.removed': function ($video) {
            //     $.ajax({
            //         // Request method.
            //         method: "POST",

            //         // Request URL.
            //         url: "/delete_video",

            //         // Request params.
            //         data: {
            //             src: $video.attr('src')
            //         }
            //     })
            //         .done(function (data) {
            //             console.log('video was deleted');
            //         })
            //         .fail(function (err) {
            //             console.log('video delete problem: ' + JSON.stringify(err));
            //         })
            // },



            // Catch file removal from the editor.
            'file.unlink': function (link) {
                $.ajax({
                    // Request method.
                    method: "POST",

                    // Request URL.
                    url: "/delete_file",

                    // Request params.
                    data: {
                        src: link.getAttribute('href')
                    }
                })
                    .done(function (data) {
                        console.log('file was deleted');
                    })
                    .fail(function (err) {
                        console.log('file delete problem: ' + JSON.stringify(err));
                    })
            }

            // ,
            // 'image.error': function (error, response) {
            //     // Do something here.
            //     // this is the editor instance.
            //     console.log(this);
            // }
        },
        fileUploadURL: '/upload_file',
        fileUploadParams: {
            id: 'my_editor'
        }


        // events : { 
        // Catch image removal from the editor.
        //    }
    })
</script>

