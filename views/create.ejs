<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin | Name</title>
    <!-- <script src="https://cdn.tailwindcss.com"></script> -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"
        integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">

    <!-- jquery plugin -->

    <!-- <link href="css/font-awesome.min.css" rel="stylesheet" type="text/css"> -->
    <!-- <link href="css/froala_editor.min.css" rel="stylesheet" type="text/css"> -->
    <link href="https://cdn.jsdelivr.net/npm/froala-editor@latest/css/froala_editor.pkgd.min.css" rel="stylesheet"
        type="text/css" />
    <script type="text/javascript"
        src="https://cdn.jsdelivr.net/npm/froala-editor@latest/js/froala_editor.pkgd.min.js"></script>
    <!-- <link href="../css/froala_style.min.css" rel="stylesheet" type="text/css" /> -->



    <!-- external css -->
    <link rel="stylesheet" href='/css/index/index.css'>
    <link rel="stylesheet" href='/css/navbar/navbar.css'>
    <link rel="stylesheet" href='/css/admin/admin.css'>
</head>

<body>


    <%- include('./components/navbar'); -%>


        <div class="container writing-section">
            <section>
                <h1 class="text-center ">Start Writing</h1>
            </section>

            <form action="/admin/posts" method="post" id="formdata">

                <textarea class="fr-view" id="textarea"  type="text" contenteditable="true"></textarea>

                <div class="form-floating my-3">
                    <input type="title" class="form-control" id="floatingInputValue" placeholder="Enter Title"
                        name="title">
                    <label for="floatingInputValue">Title</label>
                </div>

                <div class="form-floating my-3">
                    <input type="description" class="form-control" id="heading" placeholder="Enter Title"
                        name="description">
                    <label for=" floatingInputValue">Description</label>
                </div>

                <textarea class="textarea fr-view" name="content" type="text" contenteditable="true">
                </textarea>
        </div>

        <button type="submit" class="mt-3 float-end btn btn-success">publish</button>
        <button type="button" class="mt-3 mx-2 float-end btn btn-primary" id="publishBtn">create</button>
        </form>
        </div>





</body>

</html>
<script src="/node_modules/jquery/dist/jquery.min.js"></script>
<script src="/node_modules/wysiwyg-editor-node-sdk/lib/image.js"></script>
<script src="/node_modules/wysiwyg-editor-node-sdk/lib/utils/disk.management.js"></script>
<script>

</script>
<script>
    new FroalaEditor('#textarea', {
        imageUploadURL: '/upload_image',
        imageUploadParams: {
            id: 'my_editor',
        },
        // imageDeleteURL: '/delete_image',
        // fileUploadParam: 'file_name',
        // allowedAttrs: ['title', 'href', 'alt', 'src', 'style', 'name'],
        autosave: true,
        imageStyles: {
            class1: 'Class 1',
            class2: 'Class 2'
        },
        // imageEditButtons: ['imageReplace', 'imageAlign', 'imageRemove', '|', 'imageLink', 'linkOpen', 'linkEdit', 'linkRemove', '-', 'imageDisplay', 'imageStyle', 'imageAlt', 'imageSize'],

        // imageManagerLoadURL: '/load_images',
        // imageManagerDeleteURL: "/delete_image",
        // imageManagerDeleteMethod: "POST",
        events: {
            'image.inserted': function ($img, response) {

                let formdata = document.getElementById("formdata")
                let image = formdata.getElementsByTagName("img");
                console.log(image[0].src)
                let posteri = JSON.parse(response)
                console.log(posteri.link)


                const div = document.createElement("div");
                div.setAttribute("class", "form-floating my-3")
                let imagelink = posteri.link
                
                const html = `
                <input type="text" class="form-control" id="floatingInputValue" placeholder="poster image"
                name="posters" value="${imagelink}" >
                <label for="floatingInputValue">poster</label>
                `
                div.innerHTML = html
                document.getElementById("formdata").appendChild(div);

                image[0].setAttribute("name", "poster");

                for (i = 0; i < $img.length; i++) {
                    $img[i].setAttribute("loading", "lazy")
                }
            }
        }
    })

    new FroalaEditor('.textarea', {
        // Set the image upload URL.
        imageUploadURL: '/upload_image',
        imageUploadParams: {
            id: 'my_editor',
        },
        // imageDeleteURL: '/delete_image',
        // fileUploadParam: 'file_name',
        // allowedAttrs: ['title', 'href', 'alt', 'src', 'style', 'name'],
        autosave: true,
        imageStyles: {
            class1: 'Class 1',
            class2: 'Class 2'
        },
        // imageEditButtons: ['imageReplace', 'imageAlign', 'imageRemove', '|', 'imageLink', 'linkOpen', 'linkEdit', 'linkRemove', '-', 'imageDisplay', 'imageStyle', 'imageAlt', 'imageSize'],

        // imageManagerLoadURL: '/load_images',
        // imageManagerDeleteURL: "/delete_image",
        // imageManagerDeleteMethod: "POST",
        events: {
            // 'image.uploaded': function (response) {
            //     console.log(this);
            // },
            'image.inserted': function ($img, response) {

                let formdata = document.getElementById("formdata")
                let image = formdata.getElementsByTagName("img");
                console.log(image[0].src)
                image[0].setAttribute("name", "poster");

                for (i = 0; i < $img.length; i++) {
                    $img[i].setAttribute("loading", "lazy")
                }
            },
            // 'image.beforeUpload': function (images) {
            //     let formdata = document.getElementById("posterimage")
            //     console.log(formdata)
            //     let image = formdata.getElementsByTagName("img");
            //     console.log(image)
            // let data = {
            //     src: $img.attr("src")
            // }
            // console.log("im out " + data.src);

            // try {

            //     console.log("im out of delete fun");
            //     await fetch("/delete_image", {
            //         method: 'POST',
            //         body: JSON.stringify(data),
            //         headers: new Headers({
            //             'Content-Type': 'application/json; charset=UTF-8'
            //         })
            //     }).then((res) => {
            //         res.json();
            //     })
            //         .then((myJson) => {
            //             console.log(myJson);

            //         })
            // } catch (error) {
            //     console.log(error);
            // }



            // },
            'image.removed': async function ($img) {
                let data = {
                    src: $img.attr("src")
                }
                console.log("im out " + data.src);

                try {

                    console.log("im out of delete fun");
                    await fetch("/delete_image", {
                        method: 'POST',
                        body: JSON.stringify(data),
                        headers: new Headers({
                            'Content-Type': 'application/json; charset=UTF-8'
                        })
                    }).then((res) => {
                        res.json();
                    })
                        .then((myJson) => {
                            console.log(myJson);

                        })
                } catch (error) {
                    console.log(error);
                }

            },
            //         'image.removed': function (img) {
            //     $.ajax({
            //     //   Request method.
            //       method: "POST",

            //     //   Request URL.
            //       url: "/delete_image",

            //     //   Request params.
            //       data: {
            //         src: img.attr('src')
            //     }})
            //     .done (function () {
            //         console.log ('image was deleted');
            //     })
            //     .fail (function (err) {
            //       console.log ('image delete problem: ' + JSON.stringify(err));
            //     })
            //   }
            //   ,

            // 'image.removed': function($img) {
            //     var xhttp = new XMLHttpRequest();
            //     xhttp.onreadystatechange = function () {

            //         // Image was removed.
            //         if (this.readyState == 4 && this.status == 200) {
            //             console.log('image was deleted' + $img.attr('src'));
            //         }
            //     };
            //     xhttp.open("POST", "/delete_image", true);
            //     console.log('xhttp post over')
            //     let data = {
            //         src: $img.attr('src')
            //     }
            //     xhttp.send(JSON.stringify(data));
            //     console.log(JSON.stringify(data))
            // },



            // Catch video removal from the editor.
            // 'video.removed': function ($video) {
            //     $.ajax({
            //         // Request method.
            //         method: "POST",

            //         // Request URL.
            //         url: "/delete_video",

            //         // Request params.
            //         data: {
            //             src: $video.attr('src')
            //         }
            //     })
            //         .done(function (data) {
            //             console.log('video was deleted');
            //         })
            //         .fail(function (err) {
            //             console.log('video delete problem: ' + JSON.stringify(err));
            //         })
            // },



            // Catch file removal from the editor.
            'file.unlink': function (link) {
                $.ajax({
                    // Request method.
                    method: "POST",

                    // Request URL.
                    url: "/delete_file",

                    // Request params.
                    data: {
                        src: link.getAttribute('href')
                    }
                })
                    .done(function (data) {
                        console.log('file was deleted');
                    })
                    .fail(function (err) {
                        console.log('file delete problem: ' + JSON.stringify(err));
                    })
            }

            // ,
            // 'image.error': function (error, response) {
            //     // Do something here.
            //     // this is the editor instance.
            //     console.log(this);
            // }
        },
        fileUploadURL: '/upload_file',
        fileUploadParams: {
            id: 'my_editor'
        }


        // events : { 
        // Catch image removal from the editor.
        //    }
    })


    // let image_s = document.getElementsByTagName('img')
    // image(image_s)

    // let data = {
    //     name: 'Sammy'
    // }
    // let fetchData =
    // }


</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
    crossorigin="anonymous"></script>
<!-- <script type="text/javascript"
    src="https://cdn.jsdelivr.net/npm/froala-editor@3.1.0/js/froala_editor.pkgd.min.js"></script> -->
<script src="/js/create.js"></script>